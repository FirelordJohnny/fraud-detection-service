---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: fraud-detection
  labels:
    name: fraud-detection

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: fraud-detection-config
  namespace: fraud-detection
data:
  application.yml: |
    spring:
      application:
        name: fraud-detection-service
      datasource:
        url: jdbc:mysql://${DB_HOST:mysql-service}:${DB_PORT:3306}/${DB_NAME:frauddb}
        username: ${DB_USERNAME:frauduser}
        password: ${DB_PASSWORD:password}
        driver-class-name: com.mysql.cj.jdbc.Driver
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-service:9092}
        consumer:
          group-id: fraud-detection-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer

    mybatis:
      mapper-locations: classpath:mapper/*.xml
      type-aliases-package: com.faud.frauddetection.model
      configuration:
        map-underscore-to-camel-case: true

    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
      metrics:
        export:
          prometheus:
            enabled: true

    logging:
      level:
        com.faud.frauddetection: INFO
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-detection-service
  namespace: fraud-detection
  labels:
    app: fraud-detection-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fraud-detection-service
  template:
    metadata:
      labels:
        app: fraud-detection-service
    spec:
      containers:
      - name: fraud-detection-service
        image: fraud-detection:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: management
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: fraud-detection-config
              key: db.host
              optional: true
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: fraud-detection-config
              key: db.port
              optional: true
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: fraud-detection-config
              key: db.name
              optional: true
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: fraud-detection-secrets
              key: db.username
              optional: true
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraud-detection-secrets
              key: db.password
              optional: true
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: fraud-detection-config
              key: kafka.bootstrap-servers
              optional: true
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config-volume
        configMap:
          name: fraud-detection-config
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: fraud-detection-service
  namespace: fraud-detection
  labels:
    app: fraud-detection-service
spec:
  selector:
    app: fraud-detection-service
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: management
    port: 8081
    targetPort: 8081
    protocol: TCP
  type: ClusterIP

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fraud-detection-hpa
  namespace: fraud-detection
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fraud-detection-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60 